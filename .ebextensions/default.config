
files:
  /etc/nginx/conf.d/letsencrypt-temp-file.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;

        location /.well-known/acme-challenge {
          root /var/www/letsencrypt;
        }
      }

  /etc/nginx/conf.d/custom.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        server_name lootie-ui.us-east-1.elasticbeanstalk.com;
        listen 8080;
        # listen 443 ssl;

        root /var/app/current;
        index index.html;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log  /var/log/nginx/access.log main;

        # ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
        # ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;

        # ssl_session_timeout  5m;
        # ssl_protocols  TLSv1.1 TLSv1.2;
        # ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        # ssl_prefer_server_ciphers   on;

        gzip on;
        gzip_static on;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/x image/png image/gif image/jpeg image/jpg image/svg+xml$
        gzip_proxied  any;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;

        location / {
          try_files $uri $uri/ /index.html;
        }

        location /status {
          return 200;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg+xml)$ {
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
          root  /var/www/dist/skinworld-app;
        }
      }

  /opt/elasticbeanstalk/hooks/appdeploy/pre/50npm.sh:
    mode: "000755"
    owner: root
    group: users
    content: |
      # #!/bin/bash
      # don't run

  /opt/elasticbeanstalk/hooks/configdeploy/pre/50npm.sh:
    mode: "000775"
    owner: root
    group: users
    content: |
      # #!/bin/bash
      # don't run

  /etc/nginx/restart_nginx.sh:
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/bin/bash -xe
      status=`/sbin/status nginx`

      if [[ $status = *"start/running"* ]]; then
        echo "stopping nginx..."
        sudo service nginx stop
        echo "starting nginx..."
        sudo service nginx start
      else
        echo "nginx is not running... starting it..."
        sudo service nginx start
      fi

  /etc/letsencrypt/configs/install_certbot.sh:
    mode: "000755"
    owner: root
    group: users
    content: |
      mkdir -p /var/www/letsencrypt
      chgrp nginx /var/www/letsencrypt
      cp /etc/nginx/conf.d/letsencrypt-temp-file.pre /etc/nginx/conf.d/letsencrypt-temp-file.conf
      sudo service nginx reload

      wget https://dl.eff.org/certbot-auto
      sudo mv certbot-auto /usr/local/bin/certbot-auto
      sudo chown root /usr/local/bin/certbot-auto
      sudo chmod 0755 /usr/local/bin/certbot-auto

packages: 
  yum:
    gcc: []
    make: []
    openssl-devel: []
    libxml2: []
    libxml2-devel: []
    krb5-devel: []
    gcc-c++: []

container_commands:
  01_removeconfig:
    command: "rm -f /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf"
  # 02_install_certbot:
  #   command: "sh /etc/letsencrypt/configs/install_certbot.sh"
  # 03_reload_nginx:
  #   command: "sh /etc/nginx/restart_nginx.sh"
  # 04_getcert:
  #   command: "certbot-auto certonly --webroot --webroot-path /var/www/letsencrypt --debug --non-interactive --email ${CERT_EMAIL} --agree-tos --domains ${CERT_DOMAIN} --keep-until-expiring"
  # 05_link:
  #   command: "ln -sf /etc/letsencrypt/live/${CERT_DOMAIN} /etc/letsencrypt/live/ebcert"
  06_config:
    command: "mv /etc/nginx/conf.d/custom.pre /etc/nginx/conf.d/custom.conf"
  07_reload_nginx:
    command: "sh /etc/nginx/restart_nginx.sh"

